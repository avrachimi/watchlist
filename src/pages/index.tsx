import {
  GetServerSideProps,
  InferGetServerSidePropsType,
  type NextPage,
} from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import thumbnail from "~/thumbnail.jpg";
import { AiFillStar, AiOutlineStar } from "react-icons/ai";

import { api } from "~/utils/api";
import { Navbar } from "~/components/navbar";
import Image from "next/image";
import { useEffect, useState } from "react";
import { z } from "zod";
import { TRPCClientError } from "@trpc/client";
import externalApi from "~/server/services/externalApi";
import { LoadingPage } from "~/components/loading";

const movies = [
  {
    name: "",
    backdrop_path: "",
  },
];
const ItemGrid = () => {
  console.log(movies);
  return (
    <div className="grid gap-4 px-2 pt-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
      {movies.map((movie) => (
        <Item />
      ))}
    </div>
  );
};

const Item = () => {
  const movie = movies[0]!;
  return (
    <div className="mx-2 flex h-full flex-col items-center justify-center overflow-hidden rounded-lg border-2 border-slate-200">
      <div className="h-full w-full border">
        <img src={movie.backdrop_path} className="h-full w-full object-cover" />
      </div>
      <div className="mt-2 text-center text-xl">{movie.name}</div>
      <div className="grid w-full grid-cols-2 items-end  px-2 py-2">
        <div className="flex scale-90">
          <AiFillStar />
          <AiFillStar />
          <AiFillStar />
          <AiFillStar />
          <AiOutlineStar />
        </div>
        <div className="text-right text-xs">
          <div>watched by</div>
          <div>5 friends</div>
        </div>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: moviesLoading } = api.movies.getAll.useQuery();

  if (moviesLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong {}</div>;

  return (
    <div className="flex flex-col">
      {data?.map((movie) => (
        <div className="mx-2 flex h-full flex-col items-center justify-center overflow-hidden rounded-lg border-2 border-slate-200">
          <div className="h-full w-full border">
            <img src={movie.imageUrl} className="h-full w-full object-cover" />
          </div>
          <div className="mt-2 text-center text-xl">{movie.title}</div>
          <div className="grid w-full grid-cols-2 items-end  px-2 py-2">
            <div className="flex scale-90">
              <AiFillStar />
              <AiFillStar />
              <AiFillStar />
              <AiFillStar />
              <AiOutlineStar />
            </div>
            <div className="text-right text-xs">
              <div>watched by</div>
              <div>5 friends</div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
};

const Home = () => {
  const { data: sessionData } = useSession();

  if (!sessionData?.user) {
    return (
      <div className="flex h-screen w-full flex-col items-center justify-center bg-gray-900">
        <button
          className="rounded-xl bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
          onClick={() => void signIn()}
        >
          Sign in
        </button>
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Watchlist</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen bg-gray-900">
        <Navbar />
        <Feed />
        <div className="flex items-center justify-center">
          <button
            className="my-5 rounded-lg border-2 border-slate-400 py-2 px-3 hover:bg-slate-700"
            onClick={() => signOut()}
          >
            Sign out
          </button>
        </div>
      </main>
    </>
  );
};

export default Home;
